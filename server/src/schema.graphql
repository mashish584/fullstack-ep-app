type Query {
  users: [User!]
}

type Mutation {
  createUser(data: CreateUserInput): SignupPayload!
  verifyUserEmail(username: String!, token: String!): VerificationPayload!
  userLogin(id: String!, password: String): AuthPayload!
  forgotPassword(email: String!): VerificationPayload!
}

type User {
  id: ID!
  username: String!
  email: String!
  isActive: Boolean!
  createdAt: String!
  updatedAt: String!
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
}

type AuthPayload {
  token: String!
  user: User!
}

type VerificationPayload {
  success: Boolean
}

type SignupPayload {
  message: String!
}
